---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: &cluster ${CLUSTER_NAME}

clusterPodNets:
  - 10.42.0.0/16
clusterSvcNets:
  - 10.43.0.0/16

endpoint: "https://main.${INTERNAL_DOMAIN}:6443"

# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.9.1
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.32.0

additionalApiServerCertSans: &sans
  - ${CLUSTER_ENDPOINT_IP}
  - main.${INTERNAL_DOMAIN}
  - 127.0.0.1 # KubePrism

additionalMachineCertSans: *sans

cniConfig:
  name: none

nodes:
  - hostname: node-1.${INTERNAL_DOMAIN}
    ipAddress: 10.1.1.31
    controlPlane: true
    installDiskSelector:
      model: SanDisk SD9TB8W-
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 9000
        vip:
          ip: ${CLUSTER_ENDPOINT_IP}

  - hostname: node-2.${INTERNAL_DOMAIN}
    ipAddress: 10.1.1.32
    controlPlane: true
    installDiskSelector:
      model: SanDisk SD9TB8W5
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 9000
        vip:
          ip: ${CLUSTER_ENDPOINT_IP}

  - hostname: node-3.${INTERNAL_DOMAIN}
    ipAddress: 10.1.1.33
    controlPlane: true
    installDiskSelector:
      model: SanDisk SD9TB8W-
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 9000
        vip:
          ip: ${CLUSTER_ENDPOINT_IP}

  - hostname: node-4.${INTERNAL_DOMAIN}
    ipAddress: 10.1.1.34
    controlPlane: false
    installDiskSelector:
      model: KINGSTON SA400S3
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 9000

  - hostname: node-5.${INTERNAL_DOMAIN}
    ipAddress: 10.1.1.35
    controlPlane: false
    installDiskSelector:
      model: KINGSTON SA400S3
    networkInterfaces:
      - interface: eth0
        dhcp: true
        mtu: 9000

controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: m
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
        - apparmor=0
        - init_on_alloc=0
        - init_on_free=0
        - intel_iommu=on
        - iommu=pt
        - mitigations=off
        - security=none
      systemExtensions:
        officialExtensions:
          - siderolabs/i915
          - siderolabs/intel-ucode
  patches:
    # Configure containerd
    - &configureContainerd |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.cri.v1.images"]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - &disableSearchDomainPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Enable host dns
    - &hostDnsPatch |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Kernel modules
    - &kernelPatch |-
      machine:
        kernel:
          modules:
            - name: nbd

    # Configure kubelet
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            rotate-server-certificates: true
          extraConfig:
            maxPods: 150
          extraMounts:
            - destination: /var/mnt/extra
              source: /var/mnt/extra
              type: bind
              options:
                - bind
                - rshared
                - rw
          nodeIP:
            validSubnets:
              - 10.1.1.0/24

    # Configure NFS mount options
    - &nfsPatch |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              nconnect=16
              noatime=True
              async=True

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - time.cloudflare.com

    # Custom sysctl settings
    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192
          net.core.default_qdisc: fq
          net.core.rmem_max: 67108864
          net.core.wmem_max: 67108864
          net.ipv4.tcp_congestion_control: bbr
          net.ipv4.tcp_mtu_probing: 1
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_window_scaling: 1
          vm.nr_hugepages: 1024

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        apiServer:
          extraArgs:
            enable-aggregator-routing: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 10.1.1.0/24
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                plugins:
                  score:
                    disabled:
                      - name: ImageLocality
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - system-upgrade
              - actions-runner-system

    # Disable kexec on control-plane to fix networking issues with reboot: https://github.com/siderolabs/talos/issues/8751#issuecomment-2120141890
    - |-
      machine:
        sysctls:
          kernel.kexec_load_disabled: "1"

    # Various udev rules
    - |-
      machine:
        udev:
          rules:
            # Intel GPU
            - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
            # Eaton UPS
            - SUBSYSTEM=="usb", ATTR{idVendor}=="0463", ATTR{idProduct}=="ffff", GROUP="20", MODE="0660"

worker:
  machineSpec:
    secureboot: true
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: m
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
        - apparmor=0
        - init_on_alloc=0
        - init_on_free=0
        - amd_iommu=on
        - iommu=pt
        - mitigations=off
        - security=none
      systemExtensions:
        officialExtensions:
          - siderolabs/amd-ucode

  patches:
    - *configureContainerd
    - *disableSearchDomainPatch
    - *hostDnsPatch
    - *kernelPatch
    - *kubeletPatch
    - *nfsPatch
    - *ntpPatch
    - *sysctlPatch
    - |-
      machine:
        udev:
          rules:
            # Eaton UPS
            - SUBSYSTEM=="usb", ATTR{idVendor}=="0463", ATTR{idProduct}=="ffff", GROUP="20", MODE="0660"
