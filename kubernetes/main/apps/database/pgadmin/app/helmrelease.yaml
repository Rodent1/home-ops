---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pgadmin
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 1000
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: 8.1@sha256:c7e6ec8f91a9c1800ceeba628ac29f520f20e6bb3c6c7c71889c72f8e2041b46
            env:
              AUTHENTICATION_SOURCES: [ "oauth2" , "internal" ]
              OAUTH2_NAME: "authentik"
              OAUTH2_DISPLAY_NAME: "Authentik"
              OAUTH2_TOKEN_URL: "https://authentik.${SECRET_DOMAIN}/application/o/token/"
              OAUTH2_AUTHORIZATION_URL: "https://authentik.${SECRET_DOMAIN}/application/o/authorize/"
              OAUTH2_USERINFO_ENDPOINT: "https://authentik.${SECRET_DOMAIN}/application/o/userinfo/"
              OAUTH2_SERVER_METADATA_URL: "https://authentik.${SECRET_DOMAIN}/application/o/pgadmin/.well-known/openid-configuration"
              OAUTH_API_BASE_URL: "https://authentik.${SECRET_DOMAIN}/"
              OAUTH_SCOPE: "openid email profile"
              OAUTH2_AUTO_CREATE_USER: true
              MASTER_PASSWORD_REQUIRED: false
            envFrom:
              - secretRef:
                  name: pgadmin-secret
            resources:
              requests:
                cpu: 15m
                memory: 164M
              limits:
                memory: 236M

    service:
      main:
        ports:
          http:
            port: 80
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: config-pgadmin
        advancedMounts:
          main:
            main:
              - path: /var/lib/pgadmin
