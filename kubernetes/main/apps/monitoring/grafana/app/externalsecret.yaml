---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: grafana-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Grafana
        GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
        GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{ .GF_AUTH_GENERIC_OAUTH_CLIENT_ID }}"
        GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{ .GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET }}"
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://authentik.${SECRET_DOMAIN}/application/o/authorize/"
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://authentik.${SECRET_DOMAIN}/application/o/token/"
        GF_AUTH_GENERIC_OAUTH_API_URL: "https://authentik.${SECRET_DOMAIN}/application/o/userinfo/"
        GF_AUTH_SIGNOUT_REDIRECT_URL: "https://authentik.${SECRET_DOMAIN}/application/o/grafana/end-session/"
        # Optionally enable auto-login (bypasses Grafana login screen)
        GF_AUTH_OAUTH_AUTO_LOGIN: "false"
        # Optionally map user groups to Grafana roles
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'"
        # Database
        GF_DATABASE_NAME: &dbName grafana
        GF_DATABASE_HOST: &dbUrl ${POSTGRES_URL}
        GF_DATABASE_USER: &dbUser "{{ .GRAFANA_POSTGRES_USER }}"
        GF_DATABASE_PASSWORD: &dbPass "{{ .GRAFANA_POSTGRES_PASS }}"
        GF_DATABASE_SSL_MODE: disable
        GF_DATABASE_TYPE: postgres
        INIT_POSTGRES_DBNAME: *dbName
        INIT_POSTGRES_HOST: *dbUrl
        INIT_POSTGRES_USER: *dbUser
        INIT_POSTGRES_PASS: *dbPass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: grafana
    - extract:
        key: cloudnative-pg
