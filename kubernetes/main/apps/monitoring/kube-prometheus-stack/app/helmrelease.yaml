---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 55.5.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 2
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: true
    cleanPrometheusOperatorObjectNames: true

    alertmanager:
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - &host alertmanager.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 2
        useExistingSecret: true
        configSecret: alertmanager-secret
        podAntiAffinity: hard
        podMetadata:
          annotations:
            kyverno.io/exclude: "true"
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-hostpath
              resources:
                requests:
                  storage: 1Gi

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels: ["node"]
            targetLabel: instance

    kubeApiServer:
      enabled: true

    kubeControllerManager:
      enabled: true
      endpoints: &endpoints
        - 10.1.1.31
        - 10.1.1.32
        - 10.1.1.33
    kubeEtcd:
      enabled: true
      endpoints: *endpoints
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: true
      endpoints: *endpoints


    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node

    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node

    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true

    ###
    ### Prometheus operator values
    ###
    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M

      prometheusConfigReloader:
        # resource config for prometheusConfigReloader
        resources:
          requests:
            cpu: 5m
            memory: 32M
          limits:
            memory: 32M

    ###
    ### Prometheus instance values
    ###
    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        pathType: Prefix
        hosts:
          - &host prometheus.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host

      prometheusSpec:
        enableAdminAPI: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalLabels:
          cluster: main
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicas: 1
        replicaExternalLabelName: "__replica__" # must match with thanos value `.query.replicaLabel[0]`
        resources:
          requests:
            cpu: 257m
            memory: 3760M
          limits:
            memory: 3760M
        retention: 2d
        retentionSize: "15GB"
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        scrapeInterval: 1m
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 20Gi

        thanos:
          image: quay.io/thanos/thanos:v0.33.0
          objectStorageConfig:
            existingSecret:
              name: thanos-objstore-secret
              key: objstore.yml
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.33.0"
        walCompression: true

      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
