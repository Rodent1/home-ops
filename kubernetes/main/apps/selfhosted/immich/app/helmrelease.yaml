---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: database
    - name: dragonfly-operator
      namespace: database
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    controllers:
      immich:
        annotations:
          reloader.stakater.com/auto: "true"
        type: deployment
        strategy: RollingUpdate
        replicas: 1
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - configMapRef:
                  name: immich-configmap
              - secretRef:
                  name: immich-secret
        containers:
          server:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.102.3@sha256:bce8c500bfd89f01af056460431c7b20cec16d08b07299fd530824f6d420b656
            args: ["start-server.sh"]
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 144M
              limits:
                memory: 256Mi
          microservices:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.102.3@sha256:bce8c500bfd89f01af056460431c7b20cec16d08b07299fd530824f6d420b656
            args: ["start-microservices.sh"]
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                gpu.intel.com/i915: 1
                memory: 500Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 500Mi
          machine-learning:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.102.3@sha256:f825b7d09f4645671a76310575334e09fa2585c1023c3f1b66db815db0aa14ee
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 2Gi
              limits:
                memory: 2Gi
    service:
      server:
        controller: immich
        ports:
          http:
            port: 3001
      machine-learning:
        controller: immich
        ports:
          http:
            port: 3003
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.rodent.cc
          nginx.ingress.kubernetes.io/configuration-snippet: |
            set $forwarded_client_ip "";
            if ($http_x_forwarded_for ~ "^([^,]+)") {
              set $forwarded_client_ip $1;
            }
            set $client_ip $remote_addr;
            if ($forwarded_client_ip != "") {
              set $client_ip $forwarded_client_ip;
            }
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
        hosts:
          - host: &host photos.rodent.cc
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: server
                  port: 3001
        tls:
          - hosts:
              - *host
    persistence:
      library:
        existingClaim: config-immich
        globalMounts:
          - path: /usr/src/app/upload
            subPath: Immich
      cache:
        type: emptyDir
        advancedMounts:
          immich:
            machine-learning:
              - path: /cache
      geocoding-dump:
        type: emptyDir
        advancedMounts:
          immich:
            machine-learning:
              - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        type: emptyDir
        advancedMounts:
          immich:
            machine-learning:
              - path: /usr/src/app/.transformers_cache
