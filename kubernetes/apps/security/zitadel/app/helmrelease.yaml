apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: zitadel
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: zitadel
      version: 5.0.0
      sourceRef:
        kind: HelmRepository
        name: zitadel
        namespace: flux-system
  values:
    zitadel:
      # The ZITADEL config under configmapConfig is written to a Kubernetes ConfigMap
      # See all defaults here:
      # https://github.com/zitadel/zitadel/blob/main/cmd/defaults.yaml
      configmapConfig:
        Database:
          postgres:
            Host: postgres-rw.database.svc.cluster.local
            Port: 5432
            Database: zitadel
            User:
              Username:
                valueFrom:
                  secretKeyRef:
                    name: zitadel-secret
                    key: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
              Password:
                valueFrom:
                  secretKeyRef:
                    name: zitadel-secret
                    key: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
              SSL:
                Mode: disable
            Admin:
              Username:
                valueFrom:
                  secretKeyRef:
                    name: zitadel-secret
                    key: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
              Password:
                valueFrom:
                  secretKeyRef:
                    name: zitadel-secret
                    key: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD
              SSL:
                Mode: disable
        ExternalDomain: &host auth.${SECRET_DOMAIN}
        # specifies if ZITADEL is exposed externally through TLS
        # this must be set to true even if TLS is not enabled on ZITADEL itself
        # but TLS traffic is terminated on a reverse proxy
        # !!! Changing this after initial setup breaks your system !!!
        ExternalSecure: true
        ExternalPort: 443
        TLS:
          # if enabled, ZITADEL will serve all traffic over TLS (HTTPS and gRPC)
          # you must then also provide a private key and certificate to be used for the connection
          # either directly or by a path to the corresponding file
          Enabled: false
        WebAuthNName: ZITADEL
      masterkey:
        valueFrom:
          secretKeyRef:
            name: zitadel-secret
            key: ZITADEL_MASTERKEY

    replicaCount: 3
    image:
      repository: ghcr.io/zitadel/zitadel
      tag: v2.30.0
      pullPolicy: IfNotPresent

    # Additional environment variables
    env:
      - name: ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME
        valueFrom:
          secretKeyRef:
            name: zitadel-secret
            key: ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME
      - name: ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD
        valueFrom:
          secretKeyRef:
            name: zitadel-secret
            key: ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD

    service:
      type: ClusterIP
      port: 8080
      protocol: http2
      annotations: {}

    ingress:
      enabled: true
      className: "nginx"
      annotations:
        external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
      hosts:
        - host: *host
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host

    initJob:
      # Once ZITADEL is installed, the initJob can be disabled.
      enabled: true

    readinessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 5
      failureThreshold: 3

    livenessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 5
      failureThreshold: 3

    startupProbe:
      enabled: true
      periodSeconds: 1
      failureThreshold: 30

    metrics:
      enabled: true
      serviceMonitor:
        # If true, the chart creates a ServiceMonitor that is compatible with Prometheus Operator
        # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.ServiceMonitor.
        # The Prometheus community Helm chart installs this operator
        # https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack#kube-prometheus-stack
        enabled: true
