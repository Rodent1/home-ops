---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: database
    - name: dragonfly-operator
      namespace: database
  values:
    serviceMonitor:
      immich:
        serviceName: immich
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
    controllers:
      immich:
        annotations:
          reloader.stakater.com/auto: "true"
        type: deployment
        strategy: RollingUpdate
        replicas: 1
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.6@sha256:a37bbb04a0ea3f15b505c6f97637e7ae89bc66541ae23b8d3848024087980e76
            envFrom: &envFrom
              - secretRef:
                  name: immich-secret
        containers:
          server:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.125.1@sha256:9a7fdfb1679017ce853e5ef9d7280744a98369c72ff17a90957ae3cc68a1985a
            envFrom: *envFrom
            env: &env
              IMMICH_LOG_LEVEL: verbose
              TZ: Europe/Oslo
              # REDIS
              # Requires the extraArg `--default_lua_flags=allow-undeclared-keys` to be set in the dragonfly helm chart
              REDIS_HOSTNAME: dragonfly.database.svc.cluster.local
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
                gpu.intel.com/i915: 1
          machine-learning:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.125.1@sha256:c0740b545ac84ca6cd73265f6beca2c65317b383dc7e4d89dc1d1daf63d895f6
            envFrom: *envFrom
            env: *env
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    service:
      server:
        controller: immich
        ports:
          http:
            port: &immichPort 2283
          metrics:
            port: 8081
      machine-learning:
        controller: immich
        ports:
          http:
            port: 3003
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "50000M"
        hosts:
          - host: &host photos.rodent.cc
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: server
                  port: *immichPort
        tls:
          - hosts:
              - *host
    persistence:
      media:
        type: nfs
        server: tank.internal
        path: /mnt/tank/Photos
        globalMounts:
          - path: /usr/src/app/upload
            subPath: Immich
      geocoding-dump:
        type: emptyDir
        advancedMounts:
          immich:
            main:
              - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        type: emptyDir
        advancedMounts:
          immich:
            main:
              - path: /usr/src/app/.transformers_cache
      model-cache:
        type: emptyDir
        advancedMounts:
          immich:
            machine-learning:
              - path: /cache
      tmp:
        type: emptyDir
