# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: audiobookshelf
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: backup
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 1000

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        strategy: RollingUpdate
        type: statefulset
        containers:
          main:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.5.0
              pullPolicy: IfNotPresent

            env:
              TZ: Europe/Oslo
              AUDIOBOOKSHELF_UID: 568
              AUDIOBOOKSHELF_GID: 568
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

        statefulset:
          volumeClaimTemplates:
            - name: config
              globalMounts:
                - path: /config
              accessMode: ReadWriteOnce
              size: 15Gi
              storageClass: ceph-block

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *port
        tls:
          - hosts:
              - *host

    persistence:
      media:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/tank/Media
        globalMounts:
          - path: /media
      cache:
        globalMounts:
          - path: /.npm
        type: emptyDir
