# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        type: deployment
        strategy: Recreate

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 15
              imagePullPolicy: IfNotPresent

            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secret

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.10.5.4116@sha256:5caf9ec78ec9f1ef1776be99cc95e5ff7957aea61fc607ac630c9a0d6d21fdc2
              pullPolicy: IfNotPresent

            env:
              TZ: Europe/Oslo
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__AUTHENTICATION_METHOD: External

            envFrom: *envFrom

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        ports:
          http:
            port: *port


    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/prowlarr/nord.css"></head>';
            sub_filter_once on;

        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *port

        tls:
          - hosts:
              - *host

    persistence:
      config:
        type: emptyDir
