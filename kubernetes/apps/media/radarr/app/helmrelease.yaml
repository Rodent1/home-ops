---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"

      nodeSelector:
        node-role.kubernetes.io/worker: "true"

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        type: deployment
        strategy: Recreate

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9
              imagePullPolicy: IfNotPresent

            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.0.3.8127@sha256:704c63f0b16e01d0d0489e0536616a2e2aa3506141bceb4d97c5c4cfd319e32b

            env:
              TZ: Europe/Oslo
              PUSHOVER_DEBUG: "false"
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__APPLICATION_URL: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__LOG_LEVEL: info

            envFrom: *envFrom

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/radarr/nord.css"></head>';
            sub_filter_once on;

        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *port

        tls:
          - hosts:
              - *host

    persistence:
      media:
        enabled: true
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/tank/Media
        globalMounts:
          - path: /media

