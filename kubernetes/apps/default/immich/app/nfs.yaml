# PV yaml generated by running `k get pv <name> -o yaml` after the nfs-pvc was first created, then remove some unnecessary fields
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: org.democratic-csi.nfs
  finalizers:
  - kubernetes.io/pv-protection
  name: pvc-3f52df8d-28ed-414e-93e5-dad66c181782
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 20Gi
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: immich-nfs
    namespace: default
  csi:
    controllerExpandSecretRef:
      name: controller-expand-secret-nfs-democratic-csi-nfs
      namespace: system
    controllerPublishSecretRef:
      name: controller-publish-secret-nfs-democratic-csi-nfs
      namespace: system
    driver: org.democratic-csi.nfs
    fsType: nfs
    nodePublishSecretRef:
      name: node-publish-secret-nfs-democratic-csi-nfs
      namespace: system
    nodeStageSecretRef:
      name: node-stage-secret-nfs-democratic-csi-nfs
      namespace: system
    volumeAttributes:
      node_attach_driver: nfs
      provisioner_driver: freenas-api-nfs
      server: ${TRUENAS_IP}
      share: /mnt/cauldron/Apps/nfs/pvc-3f52df8d-28ed-414e-93e5-dad66c181782
      storage.kubernetes.io/csiProvisionerIdentity: 1699695825732-5846-org.democratic-csi.nfs
    volumeHandle: pvc-3f52df8d-28ed-414e-93e5-dad66c181782
  mountOptions:
  - nfsvers=4.2
  - nconnect=8
  - hard
  - noatime
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  volumeMode: Filesystem
status:
  phase: Bound
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-nfs
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: nfs
