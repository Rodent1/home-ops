---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mimir
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: mimir-distributed
      version: 5.1.3
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      # -- Definitions to set up nginx resolver
      dnsService: kube-dns
      dnsNamespace: kube-system
      clusterDomain: cluster.local
    alertmanager:
      persistentVolume:
        storageClass: local-path
        enabled: true
      replicas: 1

      statefulSet:
        enabled: true

    compactor:
      persistentVolume:
        size: 20Gi
        storageClass: local-path

    distributor:
      replicas: 2

    ingester:
      persistentVolume:
        size: 50Gi
        storageClass: local-path
      replicas: 3
      topologySpreadConstraints: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: target
                    operator: In
                    values:
                      - ingester
              topologyKey: 'kubernetes.io/hostname'

            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - ingester
              topologyKey: 'kubernetes.io/hostname'

    minio:
      enabled: false

    overrides_exporter:
      replicas: 1

    querier:
      replicas: 3

    query_frontend:
      replicas: 1

    ruler:
      replicas: 1
      enabled: true

    store_gateway:
      replicas: 1
      persistentVolume:
        size: 10Gi
        storageClass: local-path
      topologySpreadConstraints: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: target # support for enterprise.legacyLabels
                    operator: In
                    values:
                      - store-gateway
              topologyKey: 'kubernetes.io/hostname'

            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - store-gateway
              topologyKey: 'kubernetes.io/hostname'

    nginx:
      ingress:
        enabled: true
        replicas: 3
        ingressClassName: internal
        annotations:
        hosts:
          - host: &host mimir.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
      replicas: 1

    metaMonitoring:
      dashboards:
        enabled: true
        labels:
          home_ops: "1"

      serviceMonitor:
        enabled: true
        clusterLabel: "home-ops"
        interval: 1m
        scrapeTimeout: 30s

      prometheusRule:
        enabled: true
        mimirAlerts: true
        mimirRules: true

    gateway:
      replicas: 1

    mimir:
      structuredConfig:

        alertmanager_storage:
          storage_prefix: alertmanager
          backend: s3
          s3:
            endpoint: null

        ruler_storage:
          storage_prefix: ruler
          backend: s3
          s3:
            endpoint: null

        blocks_storage:
          storage_prefix: blocks
          tsdb:
            dir: /data/tsdb
          backend: s3
          s3:
            endpoint: null

        limits:
          compactor_blocks_retention_period: 1y
          max_label_names_per_series: 120
          max_global_series_per_user: 12000000
          ingestion_rate: 1000000
          ingestion_burst_size: 8000000

  valuesFrom:
    - kind: Secret
      name: mimir-secret
      valuesKey: S3_BUCKET_NAME
      targetPath: mimir.structuredConfig.common.storage.s3.bucket_name
    - kind: Secret
      name: mimir-secret
      valuesKey: S3_BUCKET_HOST
      targetPath: mimir.structuredConfig.common.storage.s3.endpoint
    - kind: Secret
      name: mimir-secret
      valuesKey: S3_BUCKET_REGION
      targetPath: mimir.structuredConfig.common.storage.s3.region
    - kind: Secret
      name: mimir-secret
      valuesKey: S3_ACCESS_KEY
      targetPath: mimir.structuredConfig.common.storage.s3.access_key_id
    - kind: Secret
      name: mimir-secret
      valuesKey: S3_SECRET_KEY
      targetPath: mimir.structuredConfig.common.storage.s3.secret_access_key
